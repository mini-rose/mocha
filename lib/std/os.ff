/* os.ff
   Copyright (c) 2023 mini-rose */

/* Cause normal process termination */
__builtin_decl("exit", null, i32)

/* Execute a shell command */
__builtin_decl_mangled("execute", i32, &str)
fn execute(cmd: str) -> i32 {
	ret execute(&cmd)
}

/* Get an environment variable */
__builtin_decl_mangled("getenv", str, &str)
fn getenv(name: str) -> str {
	ret getenv(&name)
}

/* Get current working directory */
__builtin_decl_mangled("getcwd", &str)

/* Change file mode bits */
__builtin_decl_mangled("chmod", i32, &str, i32)
fn chmod(path: str, mode: i32) -> i32 {
	ret chmod(&path, mode)
}

/* Make directory */
__builtin_decl_mangled("mkdir", i32, &str)
fn mkdir(path: str) -> i32 {
	ret mkdir(&path)
}

/* Create file */
__builtin_decl_mangled("touch", i32, &str)
fn touch(path: str) -> i32 {
	ret touch(&path)
}

/* Rename file */
__builtin_decl_mangled("rename", i32, &str, &str)
fn rename(old: str, new: str) -> i32 {
	ret rename(&old, &new)
}

/* Return true if the entry is a file */
__builtin_decl_mangled("isfile", bool, &str)
fn isfile(path: str) -> bool {
	ret isfile(&path)
}

/* Return true if the entry is a directory */
__builtin_decl_mangled("isdir", bool, &str)
fn isdir(path: str) -> bool {
	ret isdir(&path)
}

/* Test whether a path is a symbolic link */
__builtin_decl_mangled("islink", bool, &str)
fn islink(path: str) -> bool {
	ret islink(&path)
}

/* Test whether a path is absolute */
__builtin_decl_mangled("isabs", bool, &str)
fn isabs(path: str) -> bool {
	ret isabs(&path)
}

/* Returns an absolute path */
__builtin_decl_mangled("abspath", &str, &str)
fn abspath(path: str) -> &str {
	ret abspath(&path)
}

/* Returns the final component of a pathname */
__builtin_decl_mangled("basename", &str, &str)
fn basename(path: str) -> &str {
	ret basename(&path)
}

/* Returns the directory component of a pathname */
__builtin_decl_mangled("dirname", &str, &str)
fn dirname(path: str) -> &str {
	ret dirname(&path)
}

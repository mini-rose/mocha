# Copyright (c) 2023-2024 mini-rose
# No it is not generated by chatgpt or other LLM.

# Prefix used for install target
PREFIX := /usr/local

# C Compiler
CC ?= cc

# Compiler flags
CFLAGS ?= -fsanitize=address -ggdb

# Linker flags
LDFLAGS ?= -fsanitize=address

# Include directory
CFLAGS += -Iinclude

# MacOS llvm
CFLAGS += $(shell llvm-config --cflags)
LDFLAGS += $(shell llvm-config --ldflags) -lLLVM

# Error/Warning messages
CFLAGS += -Wall -Wextra

# Search path
VPATH := src:src/bs:src/cc:src/cc/parser:src/pkg

# Source files
SRC := $(shell find src -name '*.c')

# Object files
OBJ := $(SRC:.c=.o)

# Output directory
OUTDIR := build

ifeq ($(shell uname),Darwin)
CFLAGS += -DMX_TARGET=\"darwin-aarch64\"
else ifeq ($(shell uname),Linux)
CFLAGS += -DMX_TARGET=\"linux-x86_64\"
endif

mx: $(OBJ)
	@echo "LD $@"
	@$(CC) $(LDFLAGS) -o $@ $?

$(OBJ): $(SRC)

%.o: %.c
	@echo "CC $(shell basename $<)"
	@$(CC) $(CFLAGS) $(CFLAGS) -c $< -o $@

install:
	cp -f mx $(PREFIX)/bin

$(OUTDIR):
	mkdir -p $@

compile_flags.txt:
	echo $(CFLAGS) | tr ' ' '\n' > $@

clean:
	@rm -f mx
	@find src -name '*.o' -exec rm -f {} +

.PHONY: clean
